Kada proveravamo da li polazni cvor sadrzi element i da li uopste postoji cvor za unos koristimo: Idemo go

(print (car graph)) - (((A 1) (1 (- - - - - - - - -))) (((B 2) (2 (- - - - - - - - O)))))
(print (car (car (car (car graph))))) ;;Izvukli smo od cvora iz grafa (A 1) => A
(print (car (car (cdr (car (car graph)))))) ;;Izvukli smo iz cvora (1(-------)) => 1

(print (car node1));;Izvlaci slovo (A 1) => A
(print (car (cdr node1)));;Bas cifra da se izvuce (A 1) => 1

Provera da li polazni cvor uopste sadrzi figuru igraca?
(print (car (cdr (car (cdr (car (car graph))))))) - (((A 1) (1 (- - - - - - - - -))) (((B 2) (2 (- - - - - - - - O))))) => (- - - - - - - - -)

Provera potomaka:
(car (cdr (car graf))) - ((((C 3) (1 (- - - - - - - - X)))) (((C 3) (3 (- - - - - - - - X)))) (((A 1) (1 (- - - - - - - - -)))) (((A 1) (3 (- - - - - - - - -))))) - POTOMCI

Kad gledamo slovo
(car (car (car (cdr (car graf))))) - ((C 3) (1 (- - - - - - - - X)))
(car (car (car (car (cdr (car graf)))))) - (C 3)
(car (car (car (car (car (cdr (car graf))))))) - C
(car (cdr (car (car (car (car (cdr (car graf)))))))) - 3

Kad gledamo broj
(car (cdr (car (car (car (cdr (car graf))))))) - (1 (- - - - - - - - X))
(car (car (cdr (car (car (car (cdr (car graf)))))))) - 1
(car (cdr (car (cdr (car (car (car (cdr (car graf))))))))) - (- - - - - - - - X)

((((C 3) (1 (- - - - - - - - X)))) (((C 3) (3 (- - - - - - - - X)))) (((A 1) (1 (- - - - - - - - -)))) (((A 1) (3 (- - - - - - - - -)))))

Funckija depth-first-search

Dete saljem u obliku ((C 3) (1 (- - - - - - - - X))) 

Ovako kad mu se doda cifra (  ( ((C 3) (1 (- - - - - - - - X))) 0 )  )
U add children saljem graf ( ((C 3) (1 (- - - - - - - - X))) 0 ) i dodam ostatak od traversed (sto nema nista trenutno) + ovo prethodno (  ( ((C 3) (1 (- - - - - - - - X))) 0 )  )
caar graph dobijamo npr ((C 3) (1 (- - - - - - - - X)))
Ako uradim caar traversed ((C 3) (1 (- - - - - - - - X)))
cadar od graf (((B 2) (2 (- - - - - - - - O))))

((C 3) (1 (- - - - - - - - X))) 
((C 3) (3 (- - - - - - - - X))) 
((A 1) (1 (- - - - - - - - -))) 
((A 1) (3 (- - - - - - - - -))) Kad saljem decu od prvog cvora
            traversed 
graf ((((C 3) (1 (- - - - - - - - X))) 0)) '()

new-visited ( ((((C 3) (1 (- - - - - - - - X))) 0)) )
children (
add-children3 graph (((C 3) (1 (- - - - - - - - X))) 0) ( ((((C 3) (1 (- - - - - - - - X))) 0)) )
= ((C 3) (1 (- - - - - - - - X)))

cadar graf ((((D 4) (6 (- - - - - - - - O)))) (((D 4) (4 (- - - - - - - - O)))) (((B 2) (6 (- - - - - - - - O)))) (((B 2) (4 (- - - - - - - - O))))) - deca poslatog cvora
(
(((A 1) (7 (- - - - - - - - -))) 0) 
((((B 2) (8 (- - - - - - - - O)))) 1) 
(((B 2) (6 (- - - - - - - - O))) 1)

)

( (((D 4) (6 (- - - - - - - - O)))) 1)



(((D 4) (6 (- - - - - - - - O))) 1) (((D 4) (4 (- - - - - - - - O))) 1) (((B 2) (6 (- - - - - - - - O))) 1) (((B 2) (4 (- - - - - - - - O))) 1) sa caar
(((D 4) (6 (- - - - - - - - O))) 1) ((((D 4) (4 (- - - - - - - - O)))) 1) ((((B 2) (6 (- - - - - - - - O)))) 1) ((((B 2) (4 (- - - - - - - - O)))) 1) 

((B 2) (6 (- - - - - - - - O)))
((C 3) (5 (- - - - - - - - X)))

